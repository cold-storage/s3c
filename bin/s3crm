#!/usr/bin/env node

'use strict';

if (process.argv.length < 2 ||
  process.argv[2] === '-h' ||
  process.argv[2] === '--help') {
  exitWithError(new Error(`
  Usage: s3crm remote/path/file.txt

  Deletes remote/path/file.txt from S3
  Deletes password from Keychain
`));
}

const keychain = require('keychain');
const bucketName = process.env.S3C_BUCKET;
if (!bucketName) {
  exitWithError(new Error('process.env.S3C_BUCKET is required'));
}
const s3 = new(require('../lib/s3'))({
  bucket: bucketName
});
const remoteFile = s3.cleanRemotePath(process.argv[2]);
function exitWithError(err) {
  console.error(err.message);
  process.exit(13);
}
function doItAll() {
  s3.delete(remoteFile, function(err) {
    if (err) exitWithError(err);
    keychain.deletePassword({
      account: bucketName,
      service: remoteFile
    }, function(err) {
      if (err && !err.message.includes('ould not find password')) {
        exitWithError(err);
      }
    });
  });
}
doItAll();